name: Front CI Pipeline

on: push

jobs:
  linter:
    name: run / linter
    runs-on: ubuntu-latest
    steps:
      - name: Check out code from Github
        uses: actions/checkout@v3
      - name: Set up Node 18
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Installing ESLint
        working-directory: ./library_front
        run: |
          npm install eslint
      - name: Run ESLint linter
        working-directory: ./library_front
        run: |
          npx eslint src/

  build:
    name: run / build
    runs-on: ubuntu-latest
    needs: linter
    steps:
      - name: Check out code from Github
        uses: actions/checkout@v3
      - name: Build image
        run: |
          docker build library_front -f library_front/Dockerfile -t front/react:$GITHUB_SHA
          docker save -o docker_image_$GITHUB_SHA front/react:$GITHUB_SHA
      - name: Caching image
        uses: actions/cache@v3
        with:
          key: library_front
          path: docker_image_${{ github.sha }}

  test:
    name: test / unity
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out code from Github
        uses: actions/checkout@v3
      - name: Restoring cached image
        uses: actions/cache@v3
        with:
          key: library_front
          path: docker_image_${{ github.sha }}
      - name: Running react container
        env:
          IMAGE_FRONT: front/react:${{ github.sha }}
        run: |
          docker load -i docker_image_$GITHUB_SHA
          docker-compose -f docker-compose.ci.yml -p front_$GITHUB_SHA up --no-build -d react
      - name: Running react tests
        run: |
          docker exec front_${{ github.sha }}_react_1 npm test -- --watchAll=false
